name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install Poetry
      uses: snok/install-poetry@v1
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          .venv
          ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('pyproject.toml') }}
    - name: Install dependencies
      run: poetry install --no-interaction --no-root
    - name: Run tests
      run: |
        poetry run pytest --cov=./ --cov-report=xml
    - name: Upload coverage
      uses: codecov/codecov-action@v3